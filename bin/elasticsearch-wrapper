#!/bin/bash
set -o errexit
set -o nounset

# ES no longer allows AWS creds to be be passed via request when creating
# a backup respository, but we need to continue doing so since the new way:
# * requires shell access to modify the filesystem
# * cannot be updated at runtime
export ES_JAVA_OPTS="-Des.allow_insecure_settings=true ${ES_JAVA_OPTS:-}"

# ES requires an undocumented workaround for cgroups in Docker containers
# https://github.com/elastic/elasticsearch-docker/pull/25
export ES_JAVA_OPTS="-Des.cgroups.hierarchy.override=/ ${ES_JAVA_OPTS:-}"
 
if [[ -n "${ES_HEAP_SIZE:-}" ]]; then
  # If we have an ENV var that sets ES_HEAP_SIZE, then we use that.
  echo "ES_HEAP_SIZE was forced to ${ES_HEAP_SIZE} via configuration!"
elif [[ -n "${APTIBLE_CONTAINER_SIZE:-}" ]]; then
  # However, if APTIBLE_CONTAINER_SIZE is set, then we default the ES Heap Size
  # to half the container size. Leave the rest for Lucene to use via filesystem
  # caches.
  # https://www.elastic.co/guide/en/elasticsearch/guide/current/heap-sizing.html
  ES_HEAP_SIZE="$((APTIBLE_CONTAINER_SIZE / 2))m"
  echo "ES_HEAP_SIZE is defaulting to to ${ES_HEAP_SIZE}"
fi

if [[ -n "${ES_HEAP_SIZE:-}" ]]; then
  echo "APTIBLE_CONTAINER_SIZE=${APTIBLE_CONTAINER_SIZE:-}, ES_HEAP_SIZE=${ES_HEAP_SIZE}"
  export ES_JAVA_OPTS="-Xms${ES_HEAP_SIZE} -Xmx${ES_HEAP_SIZE} ${ES_JAVA_OPTS:-}"
  unset ES_HEAP_SIZE
fi

# Install any user specified plugins

if [[ -n "${ES_PLUGINS:-}" ]]; then
  for PLUGIN in $ES_PLUGINS; do
    if [[ -d "/elasticsearch/plugins/${PLUGIN}" ]]; then
      echo "${PLUGIN} is already installed"
    else
      plugin-install-wrapper "$PLUGIN"
    fi
  done
fi

# Recover the default aptible user from the file realm
cp $DATA_DIRECTORY/users /elasticsearch/config/
cp $DATA_DIRECTORY/users_roles /elasticsearch/config/

exec sudo -HE -u "$ES_USER" /elasticsearch/bin/elasticsearch "$@"
