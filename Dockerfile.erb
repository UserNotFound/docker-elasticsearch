FROM quay.io/aptible/ubuntu:14.04

# Create user early to ensure consistent UID
ENV ES_USER <%= ENV.fetch 'ES_USER' %>
ENV ES_GROUP <%= ENV.fetch 'ES_GROUP' %>
RUN getent group "$ES_GROUP" || groupadd -r "$ES_GROUP"
RUN getent passwd "$ES_USER" || useradd -r -g "$ES_GROUP" "$ES_USER"
#
# Install utilities we'll need
RUN apt-install software-properties-common apache2-utils sudo curl

# Install Java 7 and clean up
RUN echo "oracle-java7-installer shared/accepted-oracle-license-v1-1 " \
         "select true" | debconf-set-selections && \
    add-apt-repository -y ppa:webupd8team/java && \
    apt-install oracle-java7-installer

# Install NGiNX
RUN add-apt-repository -y ppa:nginx/stable && \
    apt-install nginx && mkdir -p /etc/nginx/ssl

# Install Elasticsearch and backup plugin.
ENV ES_VERSION <%= ENV.fetch 'ES_VERSION' %>
ENV ES_BACKUP_PLUGIN <%= ENV.fetch 'ES_BACKUP_PLUGIN' %>
RUN cd /tmp && \
    curl -L "https://download.elasticsearch.org/elasticsearch/elasticsearch/elasticsearch-${ES_VERSION}.tar.gz" | tar xzf - && \
    mv "/tmp/elasticsearch-${ES_VERSION}" /elasticsearch && \
    /elasticsearch/bin/plugin install <%= '--batch' if ENV.fetch('TAG').start_with? '2.' %> "${ES_BACKUP_PLUGIN}"

# Install node.js and elasticdump tool for --dump/--restore options.
# https://github.com/taskrabbit/elasticsearch-dump
ENV NODE_VERSION 4.3.1
ENV ELASTICDUMP_VERSION 1.0.3
RUN curl -L "http://nodejs.org/dist/v$NODE_VERSION/node-v${NODE_VERSION}-linux-x64.tar.gz" | tar zxf - && \
    ln -s "/node-v${NODE_VERSION}-linux-x64/bin/node" /usr/local/bin/ && \
    ln -s "/node-v${NODE_VERSION}-linux-x64/bin/npm" /usr/local/bin/ && \
    npm install -g "elasticdump@${ELASTICDUMP_VERSION}" && \
    ln -s "/node-v${NODE_VERSION}-linux-x64/bin/elasticdump" /usr/local/bin/


# Configuration templates
ADD templates/nginx.conf.template /etc/nginx/nginx.conf.template
ADD templates/elasticsearch.yml.template /elasticsearch/config/elasticsearch.yml.template
RUN rm /etc/nginx/nginx.conf
RUN rm /elasticsearch/config/elasticsearch.yml

# Wrappers
ADD bin/nginx-wrapper /usr/sbin/nginx-wrapper
ADD bin/elasticsearch-wrapper /usr/bin/elasticsearch-wrapper

ADD bin/run-database.sh /usr/bin/
ADD bin/utilities.sh /usr/bin/

ENV DATA_DIRECTORY /var/db
ENV SSL_DIRECTORY /etc/nginx/ssl

VOLUME ["$DATA_DIRECTORY"]
VOLUME ["$SSL_DIRECTORY"]

# Integration tests
ADD test /tmp/test
ADD <%= ENV.fetch 'TAG' %>/test /tmp/test
RUN bats /tmp/test

# Expose NGiNX proxy ports
EXPOSE 80
EXPOSE 443

ENTRYPOINT ["run-database.sh"]
